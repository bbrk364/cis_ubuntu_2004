---
# tasks file for CIS UBUNTU 20.04 SECTION 1 BENCHMARKS

- name: "1.1.1.1 | Ensure mounting of cramfs filesystems is disabled (Automated)"
  template:
    src: "{{ ubuntu_2004_cis_section1_rule_1_1_1_1_params['source']  }}"
    dest: "{{ ubuntu_2004_cis_section1_rule_1_1_1_1_params['dest'] }}"
    owner: "{{ ubuntu_2004_cis_section1_rule_1_1_1_1_params['owner'] }}"
    group: "{{ ubuntu_2004_cis_section1_rule_1_1_1_1_params['group'] }}"
    mode: "{{ ubuntu_2004_cis_section1_rule_1_1_1_1_params['mode'] }}"
  when:
    - ubuntu_2004_cis_section1_rule_1_1_1_1
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_1_1
    - level_1

- name: "1.1.1.1 | Remove cramfs kernel module (Automated)"
  modprobe:
    name: "{{ ubuntu_2004_cis_section1_rule_1_1_1_1_params['module_name'] }}"
    state: "{{ ubuntu_2004_cis_section1_rule_1_1_1_1_params['module_state'] }}"
  when:
    - ubuntu_2004_cis_section1_rule_1_1_1_1
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_1_1
    - level_1

- name: "1.1.1.2 | Ensure mounting of freevxfs filesystems is disabled (Automated)"
  template:
    src: "{{ ubuntu_2004_cis_section1_rule_1_1_1_2_params['source']  }}"
    dest: "{{ ubuntu_2004_cis_section1_rule_1_1_1_2_params['dest'] }}"
    owner: "{{ ubuntu_2004_cis_section1_rule_1_1_1_2_params['owner'] }}"
    group: "{{ ubuntu_2004_cis_section1_rule_1_1_1_2_params['group'] }}"
    mode: "{{ ubuntu_2004_cis_section1_rule_1_1_1_2_params['mode'] }}"
  when:
    - ubuntu_2004_cis_section1_rule_1_1_1_2
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_1_2
    - level_1

- name: "1.1.1.2 | Remove freevxfs kernel module (Automated)"
  modprobe:
    name: "{{ ubuntu_2004_cis_section1_rule_1_1_1_2_params['module_name'] }}"
    state: "{{ ubuntu_2004_cis_section1_rule_1_1_1_2_params['module_state'] }}"
  when:
    - ubuntu_2004_cis_section1_rule_1_1_1_2
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_1_2
    - level_1

- name: "1.1.1.3 | Ensure mounting of jffs2 filesystems is disabled (Automated)"
  template:
    src: "{{ ubuntu_2004_cis_section1_rule_1_1_1_3_params['source']  }}"
    dest: "{{ ubuntu_2004_cis_section1_rule_1_1_1_3_params['dest'] }}"
    owner: "{{ ubuntu_2004_cis_section1_rule_1_1_1_3_params['owner'] }}"
    group: "{{ ubuntu_2004_cis_section1_rule_1_1_1_3_params['group'] }}"
    mode: "{{ ubuntu_2004_cis_section1_rule_1_1_1_3_params['mode'] }}"
  when:
    - ubuntu_2004_cis_section1_rule_1_1_1_3
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_1_3
    - level_1

- name: "1.1.1.3 | Remove jffs2 kernel module (Automated)"
  modprobe:
    name: "{{ ubuntu_2004_cis_section1_rule_1_1_1_3_params['module_name'] }}"
    state: "{{ ubuntu_2004_cis_section1_rule_1_1_1_3_params['module_state'] }}"
  when:
    - ubuntu_2004_cis_section1_rule_1_1_1_3
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_1_3
    - level_1

- name: "1.1.1.4 | Ensure mounting of hfs filesystems is disabled (Automated)"
  template:
    src: "{{ ubuntu_2004_cis_section1_rule_1_1_1_4_params['source']  }}"
    dest: "{{ ubuntu_2004_cis_section1_rule_1_1_1_4_params['dest'] }}"
    owner: "{{ ubuntu_2004_cis_section1_rule_1_1_1_4_params['owner'] }}"
    group: "{{ ubuntu_2004_cis_section1_rule_1_1_1_4_params['group'] }}"
    mode: "{{ ubuntu_2004_cis_section1_rule_1_1_1_4_params['mode'] }}"
  when:
    - ubuntu_2004_cis_section1_rule_1_1_1_4
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_1_4
    - level_1

- name: "1.1.1.4 | Remove hfs kernel module (Automated)"
  modprobe:
    name: "{{ ubuntu_2004_cis_section1_rule_1_1_1_4_params['module_name'] }}"
    state: "{{ ubuntu_2004_cis_section1_rule_1_1_1_4_params['module_state'] }}"
  when:
    - ubuntu_2004_cis_section1_rule_1_1_1_4
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_1_4
    - level_1

- name: "1.1.1.5 | Ensure mounting of hfsplus filesystems is disabled (Automated)"
  template:
    src: "{{ ubuntu_2004_cis_section1_rule_1_1_1_5_params['source']  }}"
    dest: "{{ ubuntu_2004_cis_section1_rule_1_1_1_5_params['dest'] }}"
    owner: "{{ ubuntu_2004_cis_section1_rule_1_1_1_5_params['owner'] }}"
    group: "{{ ubuntu_2004_cis_section1_rule_1_1_1_5_params['group'] }}"
    mode: "{{ ubuntu_2004_cis_section1_rule_1_1_1_5_params['mode'] }}"
  when:
    - ubuntu_2004_cis_section1_rule_1_1_1_5
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_1_5
    - level_1

- name: "1.1.1.5 | Remove hfsplus kernel module (Automated)"
  modprobe:
    name: "{{ ubuntu_2004_cis_section1_rule_1_1_1_5_params['module_name'] }}"
    state: "{{ ubuntu_2004_cis_section1_rule_1_1_1_5_params['module_state'] }}"
  when:
    - ubuntu_2004_cis_section1_rule_1_1_1_5
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_1_5
    - level_1

- name: "1.1.1.6 | Ensure mounting of udf filesystems is disabled (Automated)"
  template:
    src: "{{ ubuntu_2004_cis_section1_rule_1_1_1_6_params['source']  }}"
    dest: "{{ ubuntu_2004_cis_section1_rule_1_1_1_6_params['dest'] }}"
    owner: "{{ ubuntu_2004_cis_section1_rule_1_1_1_6_params['owner'] }}"
    group: "{{ ubuntu_2004_cis_section1_rule_1_1_1_6_params['group'] }}"
    mode: "{{ ubuntu_2004_cis_section1_rule_1_1_1_6_params['mode'] }}"
  when:
    - ubuntu_2004_cis_section1_rule_1_1_1_6
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_1_6
    - level_1

- name: "1.1.1.6 | Remove udf kernel module (Automated)"
  modprobe:
    name: "{{ ubuntu_2004_cis_section1_rule_1_1_1_6_params['module_name'] }}"
    state: "{{ ubuntu_2004_cis_section1_rule_1_1_1_6_params['module_state'] }}"
  when:
    - ubuntu_2004_cis_section1_rule_1_1_1_6
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_1_6
    - level_1

- name: "1.1.1.7 | Ensure mounting of FAT filesystems is limited (Automated)"
  template:
    src: "{{ ubuntu_2004_cis_section1_rule_1_1_1_7_params['source']  }}"
    dest: "{{ ubuntu_2004_cis_section1_rule_1_1_1_7_params['dest'] }}"
    owner: "{{ ubuntu_2004_cis_section1_rule_1_1_1_7_params['owner'] }}"
    group: "{{ ubuntu_2004_cis_section1_rule_1_1_1_7_params['group'] }}"
    mode: "{{ ubuntu_2004_cis_section1_rule_1_1_1_7_params['mode'] }}"
  when:
    - ubuntu_2004_cis_section1_rule_1_1_1_7
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_1_7
    - level_1

- name: "1.1.1.7 | Remove FAT (vfat) kernel module (Automated)"
  modprobe:
    name: "{{ ubuntu_2004_cis_section1_rule_1_1_1_7_params['module_name'] }}"
    state: "{{ ubuntu_2004_cis_section1_rule_1_1_1_7_params['module_state'] }}"
  when:
    - ubuntu_2004_cis_section1_rule_1_1_1_7
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_1_7
    - level_1

- name: "1.1.2 | Ensure /tmp is configured (Automated)"
  copy:
    src: "{{ ubuntu_2004_cis_section1_rule_1_1_2_params['src'] }}"
    dest: "{{ ubuntu_2004_cis_section1_rule_1_1_2_params['dest'] }}"
    owner: "{{ ubuntu_2004_cis_section1_rule_1_1_2_params['owner'] }}"
    group: "{{ ubuntu_2004_cis_section1_rule_1_1_2_params['group'] }}"
    mode: "{{ ubuntu_2004_cis_section1_rule_1_1_2_params['mode'] }}"
    backup: "{{ ubuntu_2004_cis_section1_rule_1_1_2_params['backup'] }}"
    remote_src: "{{ ubuntu_2004_cis_section1_rule_1_1_2_params['remote_src'] }}"
    force: "{{ ubuntu_2004_cis_section1_rule_1_1_2_params['force'] }}"
  notify:
    - systemd tmp.mount reload
  when:
    - ubuntu_2004_cis_section1_rule_1_1_2
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_2
    - level_1

- name: "1.1.3 | Ensure nodev option set on /tmp partition (Automated)\n
         1.1.4 | Ensure nosuid option set on /tmp partition (Automated)\n
         1.1.5 | Ensure noexec option set on /tmp partition (Automated)"
  ini_file:
    path: "{{ ubuntu_2004_cis_section1_rule_1_1_3_and_1_1_4_and_1_1_5_params['path'] }}"
    section: "{{ ubuntu_2004_cis_section1_rule_1_1_3_and_1_1_4_and_1_1_5_params['section'] }}"
    option: "{{ ubuntu_2004_cis_section1_rule_1_1_3_and_1_1_4_and_1_1_5_params['option'] }}"
    value: "{{ ubuntu_2004_cis_section1_rule_1_1_3_and_1_1_4_and_1_1_5_params['value'] }}"
    owner: "{{ ubuntu_2004_cis_section1_rule_1_1_3_and_1_1_4_and_1_1_5_params['owner'] }}"
    group: "{{ ubuntu_2004_cis_section1_rule_1_1_3_and_1_1_4_and_1_1_5_params['group'] }}"
    mode: "{{ ubuntu_2004_cis_section1_rule_1_1_3_and_1_1_4_and_1_1_5_params['mode'] }}"
    state: "{{ ubuntu_2004_cis_section1_rule_1_1_3_and_1_1_4_and_1_1_5_params['state'] }}"
    backup: "{{ ubuntu_2004_cis_section1_rule_1_1_3_and_1_1_4_and_1_1_5_params['backup'] }}"
    no_extra_spaces: "{{ ubuntu_2004_cis_section1_rule_1_1_3_and_1_1_4_and_1_1_5_params['no_extra_spaces'] }}"
  notify:
    - systemd tmp.mount reload
  when:
    - ubuntu_2004_cis_section1_rule_1_1_3
    - ubuntu_2004_cis_section1_rule_1_1_4
    - ubuntu_2004_cis_section1_rule_1_1_5
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_3
    - rule_1_1_4
    - rule_1_1_5
    - level_1

- name: "1.1.6 | Ensure /dev/shm is configured (Automated)\n
         1.1.7 | Ensure nodev option set on /dev/shm partition (Automated)\n
         1.1.8 | Ensure nosuid option set on /dev/shm partition (Automated)\n
         1.1.9 | Ensure noexec option set on /dev/shm partition (Automated)"
  mount:
    src: "{{ ubuntu_2004_cis_section1_rule_1_1_6_and_1_1_7_and_1_1_8_and_1_1_9_params['src'] }}"
    path: "{{ ubuntu_2004_cis_section1_rule_1_1_6_and_1_1_7_and_1_1_8_and_1_1_9_params['path'] }}"
    fstype: "{{ ubuntu_2004_cis_section1_rule_1_1_6_and_1_1_7_and_1_1_8_and_1_1_9_params['fstype'] }}"
    opts: "{{ ubuntu_2004_cis_section1_rule_1_1_6_and_1_1_7_and_1_1_8_and_1_1_9_params['opts'] }}"
    dump: "{{ ubuntu_2004_cis_section1_rule_1_1_6_and_1_1_7_and_1_1_8_and_1_1_9_params['dump'] }}"
    passno: "{{ ubuntu_2004_cis_section1_rule_1_1_6_and_1_1_7_and_1_1_8_and_1_1_9_params['passno'] }}"
    state: "{{ ubuntu_2004_cis_section1_rule_1_1_6_and_1_1_7_and_1_1_8_and_1_1_9_params['state'] }}"
    backup: "{{ ubuntu_2004_cis_section1_rule_1_1_6_and_1_1_7_and_1_1_8_and_1_1_9_params['backup'] }}"
  when:
    - ubuntu_2004_cis_section1_rule_1_1_6
    - ubuntu_2004_cis_section1_rule_1_1_7
    - ubuntu_2004_cis_section1_rule_1_1_8
    - ubuntu_2004_cis_section1_rule_1_1_9
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_6
    - rule_1_1_7
    - rule_1_1_8
    - rule_1_1_9
    - level_1

- name: "1.1.10 | Ensure separate partition exists for /var (Automated) | Not IMPLEMENTED"
  debug:
    msg:
      - "CIS Ubuntu 20.04 benchmark 1.1.10 HAS NOT BEEN IMPLEMENTED in this Ansible Role."
      - "Separate partitions and their mount point entries may always vary based on the user's system architecture and disk layout."
      - "Highly recommend to perform the actions for 1.1.10 prior to applying this Role."
  when:
    - ubuntu_2004_cis_section1_rule_1_1_10
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_10
    - level_1

- name: "1.1.11 | Ensure separate partition exists for /var/tmp (Automated) | Not IMPLEMENTED"
  debug:
    msg:
      - "CIS Ubuntu 20.04 benchmark 1.1.11 HAS NOT BEEN IMPLEMENTED in this Ansible Role."
      - "Separate partitions and their mount point entries may always vary based on the user or organization's system architecture and disk layout."
      - "Highly recommend to perform the actions for 1.1.11 prior to applying this Role."
  when:
    - ubuntu_2004_cis_section1_rule_1_1_11
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_11
    - level_1

- name: "1.1.12 | Ensure nodev option set on /var/tmp partition (Automated) | Not IMPLEMENTED"
  debug:
    msg:
      - "CIS Ubuntu 20.04 benchmark 1.1.12 HAS NOT BEEN IMPLEMENTED in this Ansible Role."
      - "Separate partitions and their mount point entries may always vary based on the user's system architecture and disk layout."
      - "Highly recommend to perform the actions for 1.1.12 prior to applying this Role."
  when:
    - ubuntu_2004_cis_section1_rule_1_1_12
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_12
    - level_1

- name: "1.1.13 | Ensure nosuid option set on /var/tmp partition (Automated) | Not IMPLEMENTED"
  debug:
    msg:
      - "CIS Ubuntu 20.04 benchmark 1.1.13 HAS NOT BEEN IMPLEMENTED in this Ansible Role."
      - "Separate partitions and their mount point entries may always vary based on the user's system architecture and disk layout."
      - "Highly recommend to perform the actions for 1.1.13 prior to applying this Role."
  when:
    - ubuntu_2004_cis_section1_rule_1_1_13
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_13
    - level_1

- name: "1.1.14 | Ensure noexec option set on /var/tmp partition (Automated) | Not IMPLEMENTED"
  debug:
    msg:
      - "CIS Ubuntu 20.04 benchmark 1.1.14 HAS NOT BEEN IMPLEMENTED in this Ansible Role."
      - "Separate partitions and their mount point entries may always vary based on the user's system architecture and disk layout."
      - "Highly recommend to perform the actions for 1.1.14 prior to applying this Role."
  when:
    - ubuntu_2004_cis_section1_rule_1_1_14
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_14
    - level_1

- name: "1.1.15 | Ensure separate partition exists for /var/log (Automated) | Not IMPLEMENTED"
  debug:
    msg:
      - "CIS Ubuntu 20.04 benchmark 1.1.15 HAS NOT BEEN IMPLEMENTED in this Ansible Role."
      - "Separate partitions and their mount point entries may always vary based on the user's system architecture and disk layout."
      - "Highly recommend to perform the actions for 1.1.15 prior to applying this Role."
  when:
    - ubuntu_2004_cis_section1_rule_1_1_15
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_15
    - level_1

- name: "1.1.16 | Ensure separate partition exists for /var/log/audit (Automated) | Not IMPLEMENTED"
  debug:
    msg:
      - "CIS Ubuntu 20.04 benchmark 1.1.16 HAS NOT BEEN IMPLEMENTED in this Ansible Role."
      - "Separate partitions and their mount point entries may always vary based on the user's system architecture and disk layout."
      - "Highly recommend to perform the actions for 1.1.16 prior to applying this Role."
  when:
    - ubuntu_2004_cis_section1_rule_1_1_16
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_16
    - level_1

- name: "1.1.17 | Ensure separate partition exists for /home (Automated) | Not IMPLEMENTED"
  debug:
    msg:
      - "CIS Ubuntu 20.04 benchmark 1.1.17 HAS NOT BEEN IMPLEMENTED in this Ansible Role."
      - "Separate partitions and their mount point entries may always vary based on the user's system architecture and disk layout."
      - "Highly recommend to perform the actions for 1.1.17 prior to applying this Role."
  when:
    - ubuntu_2004_cis_section1_rule_1_1_17
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_17
    - level_1

- name: "1.1.18 | Ensure nodev option set on /home partition (Automated) | Not IMPLEMENTED"
  debug:
    msg:
      - "CIS Ubuntu 20.04 benchmark 1.1.18 HAS NOT BEEN IMPLEMENTED in this Ansible Role."
      - "Separate partitions and their mount point entries may always vary based on the user's system architecture and disk layout."
      - "Highly recommend to perform the actions for 1.1.18 prior to applying this Role."
  when:
    - ubuntu_2004_cis_section1_rule_1_1_18
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_18
    - level_1

- name: "1.1.19 | Ensure nodev option set on removable media partitions (Manual) | Not IMPLEMENTED"
  debug:
    msg:
      - "CIS Ubuntu 20.04 benchmark 1.1.19 HAS NOT BEEN IMPLEMENTED in this Ansible Role."
      - "Not all systems (especially Cloud VMs) will have a removable media partition."
      - "If applicable, highly recommend to perform the actions for 1.1.19 prior to applying this Role."
  when:
    - ubuntu_2004_cis_section1_rule_1_1_19
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_19
    - level_1

- name: "1.1.20 | Ensure nosuid option set on removable media partitions (Manual) | Not IMPLEMENTED"
  debug:
    msg:
      - "CIS Ubuntu 20.04 benchmark 1.1.20 HAS NOT BEEN IMPLEMENTED in this Ansible Role."
      - "Not all systems (especially Cloud VMs) will have a removable media partition."
      - "If applicable, highly recommend to perform the actions for 1.1.20 prior to applying this Role."
  when:
    - ubuntu_2004_cis_section1_rule_1_1_20
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_20
    - level_1

- name: "1.1.21 | Ensure noexec option set on removable media partitions (Manual) | Not IMPLEMENTED"
  debug:
    msg:
      - "CIS Ubuntu 20.04 benchmark 1.1.21 HAS NOT BEEN IMPLEMENTED in this Ansible Role."
      - "Not all systems (especially Cloud VMs) will have a removable media partition."
      - "If applicable, highly recommend to perform the actions for 1.1.21 prior to applying this Role."
  when:
    - ubuntu_2004_cis_section1_rule_1_1_21
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_21
    - level_1

- name: "1.1.22 | Ensure sticky bit is set on all world-writable directories (Automated)"
  shell: "{{ ubuntu_2004_cis_section1_rule_1_1_22_params['shell'] }}"
  args:
    executable: "{{ ubuntu_2004_cis_section1_rule_1_1_22_params['executable'] }}"
  changed_when: false
  failed_when: false
  when:
    - ubuntu_2004_cis_section1_rule_1_1_22
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_22
    - level_1

- name: "1.1.23 | Disable Automounting (Automated) | autofs: systemd service mask"
  systemd:
    name: "{{ ubuntu_2004_cis_section1_rule_1_1_23_params['service_name'] }}"
    daemon_reload: "{{ ubuntu_2004_cis_section1_rule_1_1_23_params['daemon_reload'] }}"
    enabled: "{{ ubuntu_2004_cis_section1_rule_1_1_23_params['enabled'] }}"
    masked: "{{ ubuntu_2004_cis_section1_rule_1_1_23_params['masked'] }}"
  ignore_errors: "{{ ubuntu_2004_cis_section1_rule_1_1_23_params['ignore_errors'] }}"
  when:
    - ubuntu_2004_cis_section1_rule_1_1_23
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_23
    - level_1

- name: "1.1.23 | Disable Automounting (Automated) | autofs: apt package purge"
  apt:
    name: "{{ ubuntu_2004_cis_section1_rule_1_1_23_params['package_name'] }}"
    state: "{{ ubuntu_2004_cis_section1_rule_1_1_23_params['package_state'] }}"
    purge: "{{ ubuntu_2004_cis_section1_rule_1_1_23_params['package_purge'] }}"
  when:
    - ubuntu_2004_cis_section1_rule_1_1_23
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_23
    - level_1

- name: "1.1.24 | Disable USB Storage (Automated)"
  template:
    src: "{{ ubuntu_2004_cis_section1_rule_1_1_24_params['source']  }}"
    dest: "{{ ubuntu_2004_cis_section1_rule_1_1_24_params['dest'] }}"
    owner: "{{ ubuntu_2004_cis_section1_rule_1_1_24_params['owner'] }}"
    group: "{{ ubuntu_2004_cis_section1_rule_1_1_24_params['group'] }}"
    mode: "{{ ubuntu_2004_cis_section1_rule_1_1_24_params['mode'] }}"
  when:
    - ubuntu_2004_cis_section1_rule_1_1_24
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_24
    - level_1

- name: "1.1.24 | Remove usb-storage kernel module (Automated)"
  modprobe:
    name: "{{ ubuntu_2004_cis_section1_rule_1_1_24_params['module_name'] }}"
    state: "{{ ubuntu_2004_cis_section1_rule_1_1_24_params['module_state'] }}"
  when:
    - ubuntu_2004_cis_section1_rule_1_1_24
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_24
    - level_1

- name: "1.2.1 | Ensure package manager repositories are configured (Manual) | apt-cache policy check"
  shell: "{{ ubuntu_2004_cis_section1_rule_1_2_1_params['shell'] }}"
  args:
    executable: "{{ ubuntu_2004_cis_section1_rule_1_2_1_params['executable'] }}"
  register: apt_cache_policy_output
  changed_when: false
  when:
    - ubuntu_2004_cis_section1_rule_1_2_1
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_2_1
    - level_1

- name: "1.2.1 | Ensure package manager repositories are configured (Manual) | apt-cache policy print"
  debug:
    var: "{{ apt_cache_policy_output.stdout_lines  | to_nice_json }}"
  when:
    - ubuntu_2004_cis_section1_rule_1_2_1
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_2_1
    - level_1

- name: "1.2.2 | Ensure GPG keys are configured (Manual) | apt-key list check"
  shell: "{{ ubuntu_2004_cis_section1_rule_1_2_2_params['shell'] }}"
  args:
    executable: "{{ ubuntu_2004_cis_section1_rule_1_2_2_params['executable'] }}"
  register: apt_key_list_output
  changed_when: false
  when:
    - ubuntu_2004_cis_section1_rule_1_2_2
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_2_2
    - level_1

- name: "1.2.2 | Ensure GPG keys are configured (Manual) | apt-key list print"
  debug:
    var: "{{ apt_key_list_output.stdout_lines  | to_nice_json }}"
  when:
    - ubuntu_2004_cis_section1_rule_1_2_2
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_2_2
    - level_1

- name: "1.3.1 | Ensure sudo is installed (Automated)"
  apt:
    name: "{{ ubuntu_2004_cis_section1_rule_1_3_1_params['package_name'] }}"
    state: "{{ ubuntu_2004_cis_section1_rule_1_3_1_params['package_state'] }}"
  when:
    - ubuntu_2004_cis_section1_rule_1_3_1
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_3_1
    - level_1

- name: "1.3.2 | Ensure sudo commands use pty (Automated)"
  lineinfile:
    path: "{{ ubuntu_2004_cis_section1_rule_1_3_2_params['path'] }}"
    line: "{{ ubuntu_2004_cis_section1_rule_1_3_2_params['line'] }}"
    regexp: "{{ ubuntu_2004_cis_section1_rule_1_3_2_params['regexp'] }}"
    state: "{{ ubuntu_2004_cis_section1_rule_1_3_2_params['state'] }}"
    owner: "{{ ubuntu_2004_cis_section1_rule_1_3_2_params['owner'] }}"
    group: "{{ ubuntu_2004_cis_section1_rule_1_3_2_params['group'] }}"
    mode: "{{ ubuntu_2004_cis_section1_rule_1_3_2_params['mode'] }}"
    validate: "{{ ubuntu_2004_cis_section1_rule_1_3_2_params['validate'] }}"
  when:
    - ubuntu_2004_cis_section1_rule_1_3_2
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_3_2
    - level_1

- name: "1.3.3 | Ensure sudo log file exists (Automated)"
  lineinfile:
    path: "{{ ubuntu_2004_cis_section1_rule_1_3_3_params['path'] }}"
    line: "{{ ubuntu_2004_cis_section1_rule_1_3_3_params['line'] }}"
    regexp: "{{ ubuntu_2004_cis_section1_rule_1_3_3_params['regexp'] }}"
    state: "{{ ubuntu_2004_cis_section1_rule_1_3_3_params['state'] }}"
    owner: "{{ ubuntu_2004_cis_section1_rule_1_3_3_params['owner'] }}"
    group: "{{ ubuntu_2004_cis_section1_rule_1_3_3_params['group'] }}"
    mode: "{{ ubuntu_2004_cis_section1_rule_1_3_3_params['mode'] }}"
    validate: "{{ ubuntu_2004_cis_section1_rule_1_3_3_params['validate'] }}"
  when:
    - ubuntu_2004_cis_section1_rule_1_3_3
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_3_3
    - level_1

- name: "1.4.1 | Ensure AIDE is installed (Automated) | Packages installation"
  apt:
    name: "{{ ubuntu_2004_cis_section1_rule_1_4_1_params['package_name'] }}"
    state: "{{ ubuntu_2004_cis_section1_rule_1_4_1_params['package_state'] }}"
  when:
    - ubuntu_2004_cis_section1_rule_1_4_1
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_4_1
    - level_1

- name: "1.4.1 | Ensure AIDE is installed (Automated) | Check if DB exists"
  stat:
    path: "{{ ubuntu_2004_cis_section1_rule_1_4_1_params['db_file_name'] }}"
  register: aide_db_file
  when:
    - ubuntu_2004_cis_section1_rule_1_4_1
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_4_1
    - level_1

- name: "1.4.1 | Ensure AIDE is installed (Automated) | Initialize DB if it DOESN'T Exist"
  command:
    cmd: "{{ ubuntu_2004_cis_section1_rule_1_4_1_params['db_file_init_command'] }}"
    creates: "{{ ubuntu_2004_cis_section1_rule_1_4_1_params['db_file_name'] }}"
  when:
    - ubuntu_2004_cis_section1_rule_1_4_1
    - ubuntu_2004_cis_section1
    - not aide_db_file.stat.exists
  tags:
    - section1
    - rule_1_4_1
    - level_1

- name: "1.4.2 | Ensure filesystem integrity is regularly checked (Automated)"
  cron:
    name: "{{ ubuntu_2004_cis_section1_rule_1_4_2_params['name'] }}"
    minute: "{{ ubuntu_2004_cis_section1_rule_1_4_2_params['minute'] }}"
    hour: "{{ ubuntu_2004_cis_section1_rule_1_4_2_params['hour'] }}"
    day: "{{ ubuntu_2004_cis_section1_rule_1_4_2_params['day'] }}"
    month: "{{ ubuntu_2004_cis_section1_rule_1_4_2_params['month'] }}"
    weekday: "{{ ubuntu_2004_cis_section1_rule_1_4_2_params['weekday'] }}"
    user: "{{ ubuntu_2004_cis_section1_rule_1_4_2_params['user'] }}"
    job: "{{ ubuntu_2004_cis_section1_rule_1_4_2_params['job'] }}"
  when:
    - ubuntu_2004_cis_section1_rule_1_4_2
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_4_2
    - level_1

- name: "1.5.1 | Ensure bootloader password is set (Automated) | Set super_users"
  lineinfile:
    path: "{{ ubuntu_2004_cis_section1_rule_1_5_1_params['set_superusers_path'] }}"
    line: "{{ ubuntu_2004_cis_section1_rule_1_5_1_params['set_superusers_line'] }}"
    regexp: "{{ ubuntu_2004_cis_section1_rule_1_5_1_params['set_superusers_regexp'] }}"
    state: "{{ ubuntu_2004_cis_section1_rule_1_5_1_params['set_superusers_state'] }}"
    owner: "{{ ubuntu_2004_cis_section1_rule_1_5_1_params['set_superusers_owner'] }}"
    group: "{{ ubuntu_2004_cis_section1_rule_1_5_1_params['set_superusers_group'] }}"
    mode: "{{ ubuntu_2004_cis_section1_rule_1_5_1_params['set_superusers_mode'] }}"
  notify:
    - update grub configuration
    - reapply permissions to bootloader configuration # to handle the fact that handlers run after tasks which change bootloader config permissions
  when:
    - ubuntu_2004_cis_section1_rule_1_5_1
    - ubuntu_2004_cis_section1_rule_1_5_1_set_superuser
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_5_1
    - level_1

# Example taken from https://github.com/florianutz/Ubuntu1804-CIS/blob/master/tasks/section1.yml
- name: "1.5.1 | Ensure bootloader password is set (Automated) | Generate and Encrypt password"
  shell: "set -eou pipefail;

      PASSWORD=$(head /dev/urandom | tr -dc A-Za-z0-9 | head -c18)

      echo -e \"$PASSWORD\n$PASSWORD\" | grub-mkpasswd-pbkdf2 | awk '/grub.pbkdf/{print$NF}'"
  args:
    executable: "{{ ubuntu_2004_cis_section1_rule_1_5_1_params['bootloader_password_executable'] }}"
  register: bootloader_encrypted_password
  when:
    - ubuntu_2004_cis_section1_rule_1_5_1
    - ubuntu_2004_cis_section1_rule_1_5_1_password_pbkdf2
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_5_1
    - level_1

- name: "1.5.1 | Ensure bootloader password is set (Automated) | Set bootloader encrypted password"
  lineinfile:
    path: "{{ ubuntu_2004_cis_section1_rule_1_5_1_params['bootloader_password_path'] }}"
    line: password_pbkdf2 root {{ bootloader_encrypted_password.stdout }}
    regexp: "{{ ubuntu_2004_cis_section1_rule_1_5_1_params['bootloader_password_regexp'] }}"
    insertafter: "{{ ubuntu_2004_cis_section1_rule_1_5_1_params['bootloader_password_insertafter'] }}"
    state: "{{ ubuntu_2004_cis_section1_rule_1_5_1_params['bootloader_password_state'] }}"
    owner: "{{ ubuntu_2004_cis_section1_rule_1_5_1_params['bootloader_password_owner'] }}"
    group: "{{ ubuntu_2004_cis_section1_rule_1_5_1_params['bootloader_password_group'] }}"
    mode: "{{ ubuntu_2004_cis_section1_rule_1_5_1_params['bootloader_password_mode'] }}"
  notify:
    - update grub configuration
    - reapply permissions to bootloader configuration # to handle the fact that handlers run after tasks which change bootloader config permissions
  when:
    - ubuntu_2004_cis_section1_rule_1_5_1
    - ubuntu_2004_cis_section1_rule_1_5_1_password_pbkdf2
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_5_1
    - level_1

- name: "1.5.1 | Ensure bootloader password is set (Automated) | Add --unrestricted for system boot without password"
  replace:
    path: "{{ ubuntu_2004_cis_section1_rule_1_5_1_params['unrestricted_path'] }}"
    regexp: "{{ ubuntu_2004_cis_section1_rule_1_5_1_params['unrestricted_regex'] }}"
    replace: "{{ ubuntu_2004_cis_section1_rule_1_5_1_params['unrestricted_replace'] }}"
    owner: "{{ ubuntu_2004_cis_section1_rule_1_5_1_params['unrestricted_owner'] }}"
    group: "{{ ubuntu_2004_cis_section1_rule_1_5_1_params['unrestricted_group'] }}"
    mode: "{{ ubuntu_2004_cis_section1_rule_1_5_1_params['unrestricted_mode'] }}"
  notify:
    - update grub configuration
    - reapply permissions to bootloader configuration # to handle the fact that handlers run after tasks which change bootloader config permissions
  when:
    - ubuntu_2004_cis_section1_rule_1_5_1
    - ubuntu_2004_cis_section1_rule_1_5_1_unrestricted
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_5_1
    - level_1

- name: "1.5.2 | Ensure permissions on bootloader config are configured (Automated)"
  file:
    path: "{{ ubuntu_2004_cis_section1_rule_1_5_2_params['path'] }}"
    mode: "{{ ubuntu_2004_cis_section1_rule_1_5_2_params['mode'] }}"
    owner: "{{ ubuntu_2004_cis_section1_rule_1_5_2_params['owner'] }}"
    group: "{{ ubuntu_2004_cis_section1_rule_1_5_2_params['group'] }}"
    state: "{{ ubuntu_2004_cis_section1_rule_1_5_2_params['state'] }}"
  notify:
    - reapply permissions to bootloader configuration # to handle the fact that handlers run after tasks which change bootloader config permissions
  when:
    - ubuntu_2004_cis_section1_rule_1_5_2
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_5_2
    - level_1

- name: "1.5.3 | Ensure authentication required for single user mode (Automated) | Audit if root has a password"
  command: "{{ ubuntu_2004_cis_section1_rule_1_5_3_params['audit_root_password_command'] }}" # Evaluates if root has a password. If root has password, rc is 0.
  register: audit_root_password_command_result
  changed_when: false
  failed_when: false
  when:
    - ubuntu_2004_cis_section1_rule_1_5_3
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_5_3
    - level_1

- name: "1.5.3 | Ensure authentication required for single user mode (Automated) | Set password for root"
  shell: "set -eou pipefail;

      PASSWORD=$(head /dev/urandom | tr -dc A-Za-z0-9 | head -c18)

      echo -e \"$PASSWORD\n$PASSWORD\" | passwd root"
  args:
    executable: "{{ ubuntu_2004_cis_section1_rule_1_5_3_params['audit_root_password_executable'] }}"
  when:
    - audit_root_password_command_result.rc == 0 # This conditions allows to only set/change root password when it has been evaluated that root did not originally have a password.
    - ubuntu_2004_cis_section1_rule_1_5_3
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_5_3
    - level_1
